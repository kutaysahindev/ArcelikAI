{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DocBarnecle\\\\source\\\\repos\\\\ArcelikMain\\\\ArcelikMain\\\\ClientApp\\\\src\\\\Profile.js\",\n  _s = $RefreshSig$();\n// Profile.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport { Header, Icon, Table } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    authState,\n    oktaAuth\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState || !authState.isAuthenticated) {\n      // When the user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      setUserInfo(authState.idToken.claims);\n      // You can also get user information from the `/userinfo` endpoint\n      /*oktaAuth.getUser().then((info) => {\n        setUserInfo(info);\n      });*/\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fetching user profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h1\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"drivers license\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), \" My User Profile (ID Token Claims)\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Below is the information from your ID token obtained during the \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://developer.okta.com/docs/guides/implement-auth-code-pkce\",\n          children: \"PKCE Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", \"and is now stored in local storage.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This route is protected with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"<SecureRoute>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this), \" \", \"component, ensuring that this page cannot be accessed until you have authenticated.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Claim\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(userInfo).map(claimEntry => {\n            const claimName = claimEntry[0];\n            const claimValue = claimEntry[1];\n            const claimId = `claim-${claimName}`;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: claimName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: claimId,\n                children: claimValue.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, claimName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"/7FunoA1ejJNU8uKGTy1GZFqU2I=\", false, function () {\n  return [useOktaAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useOktaAuth","Header","Icon","Table","jsxDEV","_jsxDEV","Profile","_s","authState","oktaAuth","userInfo","setUserInfo","isAuthenticated","idToken","claims","children","fileName","_jsxFileName","lineNumber","columnNumber","as","name","href","Object","entries","map","claimEntry","claimName","claimValue","claimId","id","toString","_c","$RefreshReg$"],"sources":["C:/Users/DocBarnecle/source/repos/ArcelikMain/ArcelikMain/ClientApp/src/Profile.js"],"sourcesContent":["// Profile.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport { Header, Icon, Table } from \"semantic-ui-react\";\n\nconst Profile = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (!authState || !authState.isAuthenticated) {\n      // When the user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      setUserInfo(authState.idToken.claims);\n      // You can also get user information from the `/userinfo` endpoint\n      /*oktaAuth.getUser().then((info) => {\n        setUserInfo(info);\n      });*/\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  if (!userInfo) {\n    return (\n      <div>\n        <p>Fetching user profile...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <Header as=\"h1\">\n          <Icon name=\"drivers license\" /> My User Profile (ID Token Claims){\" \"}\n        </Header>\n        <p>\n          Below is the information from your ID token obtained during the &nbsp;\n          <a href=\"https://developer.okta.com/docs/guides/implement-auth-code-pkce\">\n            PKCE Flow\n          </a>{\" \"}\n          and is now stored in local storage.\n        </p>\n        <p>\n          This route is protected with the <code>&lt;SecureRoute&gt;</code>{\" \"}\n          component, ensuring that this page cannot be accessed until you have\n          authenticated.\n        </p>\n        <Table>\n          <thead>\n            <tr>\n              <th>Claim</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(userInfo).map((claimEntry) => {\n              const claimName = claimEntry[0];\n              const claimValue = claimEntry[1];\n              const claimId = `claim-${claimName}`;\n              return (\n                <tr key={claimName}>\n                  <td>{claimName}</td>\n                  <td id={claimId}>{claimValue.toString()}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}