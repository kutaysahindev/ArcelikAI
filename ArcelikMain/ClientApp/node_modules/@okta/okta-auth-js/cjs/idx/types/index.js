"use strict";

Object.defineProperty(exports, "IdxTransactionMeta", {
  enumerable: true,
  get: function () {
    return _Transaction.IdxTransactionMeta;
  }
});
Object.defineProperty(exports, "FlowIdentifier", {
  enumerable: true,
  get: function () {
    return _FlowIdentifier.FlowIdentifier;
  }
});
Object.defineProperty(exports, "IdxMessage", {
  enumerable: true,
  get: function () {
    return _idxJs.IdxMessage;
  }
});
Object.defineProperty(exports, "AuthenticationOptions", {
  enumerable: true,
  get: function () {
    return _authenticate.AuthenticationOptions;
  }
});
Object.defineProperty(exports, "RegistrationOptions", {
  enumerable: true,
  get: function () {
    return _register.RegistrationOptions;
  }
});
Object.defineProperty(exports, "PasswordRecoveryOptions", {
  enumerable: true,
  get: function () {
    return _recoverPassword.PasswordRecoveryOptions;
  }
});
Object.defineProperty(exports, "ProceedOptions", {
  enumerable: true,
  get: function () {
    return _proceed.ProceedOptions;
  }
});
Object.defineProperty(exports, "CancelOptions", {
  enumerable: true,
  get: function () {
    return _cancel.CancelOptions;
  }
});
Object.defineProperty(exports, "EmailVerifyCallbackResponse", {
  enumerable: true,
  get: function () {
    return _emailVerify.EmailVerifyCallbackResponse;
  }
});
exports.IdxFeature = exports.AuthenticatorKey = exports.IdxStatus = void 0;

var _Transaction = require("../../types/Transaction");

var _FlowIdentifier = require("./FlowIdentifier");

var _idxJs = require("./idx-js");

var _authenticate = require("../authenticate");

var _register = require("../register");

var _recoverPassword = require("../recoverPassword");

var _proceed = require("../proceed");

var _cancel = require("../cancel");

var _emailVerify = require("../emailVerify");

/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */
let IdxStatus;
exports.IdxStatus = IdxStatus;

(function (IdxStatus) {
  IdxStatus["SUCCESS"] = "SUCCESS";
  IdxStatus["PENDING"] = "PENDING";
  IdxStatus["FAILURE"] = "FAILURE";
  IdxStatus["TERMINAL"] = "TERMINAL";
  IdxStatus["CANCELED"] = "CANCELED";
})(IdxStatus || (exports.IdxStatus = IdxStatus = {}));

let AuthenticatorKey;
exports.AuthenticatorKey = AuthenticatorKey;

(function (AuthenticatorKey) {
  AuthenticatorKey["OKTA_PASSWORD"] = "okta_password";
  AuthenticatorKey["OKTA_EMAIL"] = "okta_email";
  AuthenticatorKey["PHONE_NUMBER"] = "phone_number";
  AuthenticatorKey["GOOGLE_AUTHENTICATOR"] = "google_otp";
  AuthenticatorKey["SECURITY_QUESTION"] = "security_question";
  AuthenticatorKey["OKTA_VERIFY"] = "okta_verify";
})(AuthenticatorKey || (exports.AuthenticatorKey = AuthenticatorKey = {}));

let IdxFeature;
exports.IdxFeature = IdxFeature;

(function (IdxFeature) {
  IdxFeature["PASSWORD_RECOVERY"] = "recover-password";
  IdxFeature["REGISTRATION"] = "enroll-profile";
  IdxFeature["SOCIAL_IDP"] = "redirect-idp";
})(IdxFeature || (exports.IdxFeature = IdxFeature = {}));
//# sourceMappingURL=index.js.map