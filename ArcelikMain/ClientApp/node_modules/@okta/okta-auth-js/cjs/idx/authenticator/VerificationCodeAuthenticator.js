"use strict";

exports.VerificationCodeAuthenticator = void 0;

var _Authenticator = require("./Authenticator");

// general authenticator to handle "verificationCode" input
// it can be used for "email", "phone", "google authenticator"
// a new authenticator class should be created if special cases need to be handled
class VerificationCodeAuthenticator extends _Authenticator.Authenticator {
  canVerify(values) {
    return values.verificationCode || values.otp;
  }

  mapCredentials(values) {
    return {
      passcode: values.verificationCode || values.otp
    };
  }

  getInputs(idxRemediationValue) {
    var _idxRemediationValue$;

    return { ...((_idxRemediationValue$ = idxRemediationValue.form) === null || _idxRemediationValue$ === void 0 ? void 0 : _idxRemediationValue$.value[0]),
      name: 'verificationCode',
      type: 'string',
      required: idxRemediationValue.required
    };
  }

}

exports.VerificationCodeAuthenticator = VerificationCodeAuthenticator;
//# sourceMappingURL=VerificationCodeAuthenticator.js.map