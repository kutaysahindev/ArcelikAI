{"version":3,"file":"okta-react.cjs.js","sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx","../../src/LoginCallback.tsx","../../src/SecureRoute.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState | null;\n    _onAuthRequired?: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext) as IOktaContext;\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\nimport { compare as compareVersions } from 'compare-versions';\n\ndeclare const AUTH_JS: {\n  minSupportedVersion: string;\n}\n\ndeclare const PACKAGE_NAME: string;\ndeclare const PACKAGE_VERSION: string;\ndeclare const SKIP_VERSION_CHECK: string;\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = (async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    }) as ((oktaAuth: OktaAuth, originalUri?: string) => Promise<void>);\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${PACKAGE_NAME}/${PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    oktaAuth.start();\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n      oktaAuth.stop();\n    };\n  }, [oktaAuth, restoreOriginalUri]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!oktaAuth._oktaUserAgent) {\n    console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n  }\n  else {\n    // use SKIP_VERSION_CHECK flag to control version check in tests\n    // OKTA-465157: remove SKIP_VERSION_CHECK\n    const isAuthJsSupported = SKIP_VERSION_CHECK === '1' ||\n      compareVersions(oktaAuth._oktaUserAgent.getVersion(), AUTH_JS.minSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      const err = new AuthSdkError(`\n        Passed in oktaAuth is not compatible with the SDK,\n        minimum supported okta-auth-js version is ${AUTH_JS.minSupportedVersion}.\n      `);\n      return <OktaError error={err} />;\n    }\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props: Omit<P, keyof IOktaContext>) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore OKTA-464505: backward compatibility support for auth-js@5\n    const isInteractionRequired = oktaAuth.idx.isInteractionRequired || oktaAuth.isInteractionRequired.bind(oktaAuth);\n    if (onAuthResume && isInteractionRequired()) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect().then(() => {\n      // In `<Security>` component service was not started in case of login redirect.\n      // Start it now after `restoreOriginalUri` has been called and route changed.\n      oktaAuth.start();\n    }).catch(e => {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport * as ReactRouterDom from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError } from '@okta/okta-auth-js';\nimport OktaError from './OktaError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet useMatch: any;\nif ('useRouteMatch' in ReactRouterDom) {\n  // trick static analyzer to avoid \"'useRouteMatch' is not exported\" error\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  useMatch = (ReactRouterDom as any)['useRouteMatch' in ReactRouterDom ? 'useRouteMatch' : ''];\n} else {\n  // throw when useMatch is triggered\n  useMatch = () => { \n    throw new AuthSdkError('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the \"samples\" folder for how to implement your own custom SecureRoute Component.');\n  };\n}\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n  errorComponent?: React.ComponentType<{ error: Error }>;\n} & ReactRouterDom.RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired,\n  errorComponent,\n  ...routeProps\n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n  const [handleLoginError, setHandleLoginError] = React.useState<Error | null>(null);\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin().catch(err => {\n        setHandleLoginError(err as Error);\n      });\n    }  \n\n  }, [\n    authState,\n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (handleLoginError) {\n    return <ErrorReporter error={handleLoginError} />;\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ReactRouterDom.Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n"],"names":["OktaContext","React","createContext","useOktaAuth","useContext","OktaError","error","name","message","toString","Security","oktaAuth","restoreOriginalUri","onAuthRequired","children","useState","authStateManager","getAuthState","authState","setAuthState","useEffect","options","console","warn","originalUri","_oktaUserAgent","addEnvironment","handler","subscribe","start","unsubscribe","stop","err","AuthSdkError","isAuthJsSupported","compareVersions","getVersion","minSupportedVersion","Provider","value","_onAuthRequired","withOktaAuth","ComponentToWrap","WrappedComponent","props","oktaAuthProps","displayName","LoginCallback","errorComponent","loadingElement","onAuthResume","callbackError","setCallbackError","ErrorReporter","isInteractionRequired","idx","bind","handleLoginRedirect","then","e","authError","displayError","useMatch","ReactRouterDom","SecureRoute","routeProps","match","pendingLogin","useRef","handleLoginError","setHandleLoginError","handleLogin","current","toRelativeUrl","window","location","href","origin","setOriginalUri","onAuthRequiredFn","signInWithRedirect","isAuthenticated","Route"],"mappings":"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"}