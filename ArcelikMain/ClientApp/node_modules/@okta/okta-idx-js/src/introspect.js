"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/json/stringify"));

var _client = require("./client");

var _util = require("./util");

/*!
 * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
var parseAndReject = function parseAndReject(response) {
  return response.json().then(function (err) {
    return _promise.default.reject(err);
  });
};

var introspect = /*#__PURE__*/function () {
  var _introspect = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
    var withCredentials, domain, interactionHandle, stateHandle, version, target, body, headers, credentials;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            withCredentials = _ref.withCredentials, domain = _ref.domain, interactionHandle = _ref.interactionHandle, stateHandle = _ref.stateHandle, version = _ref.version;
            (0, _util.validateVersionConfig)(version);
            target = "".concat(domain, "/idp/idx/introspect");
            body = stateHandle ? {
              stateToken: stateHandle
            } : {
              interactionHandle: interactionHandle
            };
            headers = {
              'content-type': "application/ion+json; okta-version=".concat(version),
              // Server wants this version info
              accept: "application/ion+json; okta-version=".concat(version)
            };
            credentials = withCredentials === false ? 'omit' : 'include';
            return _context.abrupt("return", (0, _client.request)(target, {
              credentials: credentials,
              headers: headers,
              body: (0, _stringify.default)(body)
            }).then(function (response) {
              return response.ok ? response.json() : parseAndReject(response);
            }));

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  function introspect(_x) {
    return _introspect.apply(this, arguments);
  }

  return introspect;
}();

var _default = introspect;
exports.default = _default;