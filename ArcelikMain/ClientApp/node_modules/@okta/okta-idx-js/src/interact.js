"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

require("core-js/modules/es.array.join.js");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/slicedToArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/asyncToGenerator"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _entries = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/object/entries"));

var _concat = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/concat"));

var _client = require("./client");

/*!
 * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
var parseAndReject = function parseAndReject(response) {
  return response.json().then(function (err) {
    return _promise.default.reject(err);
  });
};

var interact = /*#__PURE__*/function () {
  var _interact = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
    var _context;

    var withCredentials, clientId, baseUrl, _ref$scopes, scopes, redirectUri, codeChallenge, codeChallengeMethod, state, activationToken, recoveryToken, target, params, body, headers, credentials;

    return _regenerator.default.wrap(function _callee$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            withCredentials = _ref.withCredentials, clientId = _ref.clientId, baseUrl = _ref.baseUrl, _ref$scopes = _ref.scopes, scopes = _ref$scopes === void 0 ? ['openid', 'email'] : _ref$scopes, redirectUri = _ref.redirectUri, codeChallenge = _ref.codeChallenge, codeChallengeMethod = _ref.codeChallengeMethod, state = _ref.state, activationToken = _ref.activationToken, recoveryToken = _ref.recoveryToken;
            target = "".concat(baseUrl, "/v1/interact");
            params = {
              client_id: clientId,
              scope: scopes.join(' '),
              redirect_uri: redirectUri,
              code_challenge: codeChallenge,
              code_challenge_method: codeChallengeMethod,
              state: state
            };

            if (activationToken) {
              params.activation_token = activationToken;
            }

            if (recoveryToken) {
              params.recovery_token = recoveryToken;
            }

            body = (0, _map.default)(_context = (0, _entries.default)(params)).call(_context, function (_ref2) {
              var _context2;

              var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
                  param = _ref3[0],
                  value = _ref3[1];

              return (0, _concat.default)(_context2 = "".concat(param, "=")).call(_context2, encodeURIComponent(value));
            }).join('&');
            headers = {
              'content-type': 'application/x-www-form-urlencoded'
            };
            credentials = withCredentials === false ? 'omit' : 'include';
            return _context3.abrupt("return", (0, _client.request)(target, {
              credentials: credentials,
              headers: headers,
              body: body
            }).then(function (response) {
              return response.ok ? response.json() : parseAndReject(response);
            }).then(function (data) {
              return data.interaction_handle;
            }));

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee);
  }));

  function interact(_x) {
    return _interact.apply(this, arguments);
  }

  return interact;
}();

var _default = interact;
exports.default = _default;